import React from 'react';
import { IIconProps } from './icon.types';
import * as Styled from './icon.styled';
import { Text } from '../text';

export const Icon: React.FC<IIconProps> = ({ color, name, size = 14 }) => {
  let icon = <Text>icon name is not valid</Text>;
  if (name === 'customer') {
    icon = (
      <svg width={size} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M16.7143 0H1.28571C0.578571 0 0 0.578571 0 1.28571V16.7143C0 17.4214 0.578571 18 1.28571 18H16.7143C17.4214 18 18 17.4214 18 16.7143V1.28571C18 0.578571 17.4214 0 16.7143 0ZM9 3.53571C10.5943 3.53571 11.8929 4.83429 11.8929 6.42857C11.8929 8.02286 10.5943 9.32143 9 9.32143C7.40571 9.32143 6.10714 8.02286 6.10714 6.42857C6.10714 4.83429 7.40571 3.53571 9 3.53571ZM14.7857 15.4286H3.21429V14.4643C3.21429 12.5357 7.07143 11.5714 9 11.5714C10.9286 11.5714 14.7857 12.5357 14.7857 14.4643V15.4286Z"
          fill={color}
        />
      </svg>
    );
  } else if (name === 'department') {
    icon = (
      <svg height={size + 2} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M14.16 10.4L9.16 6.83C8.46 6.33 7.53 6.33 6.84 6.83L1.84 10.4C1.31 10.78 1 11.38 1 12.03V20C1 20.55 1.45 21 2 21H6V15H10V21H14C14.55 21 15 20.55 15 20V12.03C15 11.38 14.69 10.78 14.16 10.4Z"
          fill={color}
        />
        <path
          d="M21.03 3H11.97C10.88 3 10 3.88 10 4.97L10.09 5.06C10.17 5.11 10.25 5.15 10.33 5.2L15.33 8.77C16.09 9.31 16.63 10.11 16.87 11H19V13H17V15H19V17H17V21H21.03C22.12 21 23 20.12 23 19.03V4.97C23 3.88 22.12 3 21.03 3ZM19 9H17V7H19V9Z"
          fill={color}
        />
      </svg>
    );
  } else if (name === 'dashboard') {
    icon = (
      <svg height={size - 2} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M1 10H7C7.55 10 8 9.55 8 9V1C8 0.45 7.55 0 7 0H1C0.45 0 0 0.45 0 1V9C0 9.55 0.45 10 1 10ZM1 18H7C7.55 18 8 17.55 8 17V13C8 12.45 7.55 12 7 12H1C0.45 12 0 12.45 0 13V17C0 17.55 0.45 18 1 18ZM11 18H17C17.55 18 18 17.55 18 17V9C18 8.45 17.55 8 17 8H11C10.45 8 10 8.45 10 9V17C10 17.55 10.45 18 11 18ZM10 1V5C10 5.55 10.45 6 11 6H17C17.55 6 18 5.55 18 5V1C18 0.45 17.55 0 17 0H11C10.45 0 10 0.45 10 1Z"
          fill={color}
        />
      </svg>
    );
  } else if (name === 'employee') {
    icon = (
      <svg height={size + 2} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM13.61 6.34C14.68 6.34 15.54 7.2 15.54 8.27C15.54 9.34 14.68 10.2 13.61 10.2C12.54 10.2 11.68 9.34 11.68 8.27C11.67 7.2 12.54 6.34 13.61 6.34ZM7.61 4.76C8.91 4.76 9.97 5.82 9.97 7.12C9.97 8.42 8.91 9.48 7.61 9.48C6.31 9.48 5.25 8.42 5.25 7.12C5.25 5.81 6.3 4.76 7.61 4.76ZM7.61 13.89V17.64C5.21 16.89 3.31 15.04 2.47 12.68C3.52 11.56 6.14 10.99 7.61 10.99C8.14 10.99 8.81 11.07 9.51 11.21C7.87 12.08 7.61 13.23 7.61 13.89ZM10 18C9.73 18 9.47 17.99 9.21 17.96V13.89C9.21 12.47 12.15 11.76 13.61 11.76C14.68 11.76 16.53 12.15 17.45 12.91C16.28 15.88 13.39 18 10 18Z"
          fill={color}
        />
      </svg>
    );
  } else if (name === 'invoice') {
    icon = (
      <svg height={size + 2} viewBox="0 0 18 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M18 0.209997C17.9344 0.209198 17.8694 0.222131 17.8091 0.247964C17.7488 0.273798 17.6946 0.31196 17.65 0.359997L16.86 1.15C16.66 1.35 16.35 1.35 16.15 1.15L15.36 0.359997C15.16 0.159997 14.85 0.159997 14.65 0.359997L13.86 1.15C13.66 1.35 13.35 1.35 13.15 1.15L12.36 0.359997C12.16 0.159997 11.85 0.159997 11.65 0.359997L10.86 1.15C10.66 1.35 10.35 1.35 10.15 1.15L9.36 0.359997C9.16 0.159997 8.85 0.159997 8.65 0.359997L7.86 1.15C7.66 1.35 7.35 1.35 7.15 1.15L6.35 0.349997C6.15 0.149997 5.84 0.149997 5.64 0.349997L4.85 1.15C4.65 1.35 4.34 1.35 4.14 1.15L3.35 0.349997C3.15 0.149997 2.84 0.149997 2.64 0.349997L1.85 1.15C1.65 1.35 1.34 1.35 1.14 1.15L0.35 0.349997C0.256067 0.259454 0.130464 0.209213 0 0.209997V19.8C0.13 19.8 0.26 19.75 0.35 19.65L1.14 18.86C1.34 18.66 1.65 18.66 1.85 18.86L2.64 19.65C2.84 19.85 3.15 19.85 3.35 19.65L4.14 18.86C4.34 18.66 4.65 18.66 4.85 18.86L5.64 19.65C5.84 19.85 6.15 19.85 6.35 19.65L7.14 18.86C7.34 18.66 7.65 18.66 7.85 18.86L8.64 19.65C8.84 19.85 9.15 19.85 9.35 19.65L10.14 18.86C10.34 18.66 10.65 18.66 10.85 18.86L11.64 19.65C11.84 19.85 12.15 19.85 12.35 19.65L13.14 18.86C13.34 18.66 13.65 18.66 13.85 18.86L14.64 19.65C14.84 19.85 15.15 19.85 15.35 19.65L16.14 18.86C16.34 18.66 16.65 18.66 16.85 18.86L17.64 19.65C17.74 19.75 17.87 19.8 17.99 19.8V0.209997H18ZM14 15H4C3.45 15 3 14.55 3 14C3 13.45 3.45 13 4 13H14C14.55 13 15 13.45 15 14C15 14.55 14.55 15 14 15ZM14 11H4C3.45 11 3 10.55 3 10C3 9.45 3.45 9 4 9H14C14.55 9 15 9.45 15 10C15 10.55 14.55 11 14 11ZM14 7H4C3.45 7 3 6.55 3 6C3 5.45 3.45 5 4 5H14C14.55 5 15 5.45 15 6C15 6.55 14.55 7 14 7Z"
          fill={color}
        />
      </svg>
    );
  } else if (name === 'search') {
    icon = (
      <svg height={size} viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M13.5 12H12.71L12.43 11.73C13.0549 11.004 13.5117 10.1488 13.7675 9.22562C14.0234 8.30246 14.072 7.33416 13.91 6.39C13.44 3.61 11.12 1.39 8.31997 1.05C7.33559 0.925467 6.33576 1.02777 5.397 1.34909C4.45824 1.67041 3.60542 2.20222 2.90381 2.90383C2.20219 3.60545 1.67038 4.45826 1.34906 5.39703C1.02775 6.33579 0.925441 7.33562 1.04997 8.32C1.38997 11.12 3.60998 13.44 6.38998 13.91C7.33413 14.0721 8.30243 14.0234 9.22559 13.7676C10.1487 13.5117 11.0039 13.055 11.73 12.43L12 12.71V13.5L16.25 17.75C16.66 18.16 17.33 18.16 17.74 17.75C18.15 17.34 18.15 16.67 17.74 16.26L13.5 12ZM7.49997 12C5.00997 12 2.99997 9.99 2.99997 7.5C2.99997 5.01 5.00997 3 7.49997 3C9.98997 3 12 5.01 12 7.5C12 9.99 9.98997 12 7.49997 12Z"
          fill={color}
        />
      </svg>
    );
  }

  return <Styled.Container>{icon}</Styled.Container>;
};
